getwd()
# Read ModeChoice_input.csv
setwd("C:/Users/ethan/Desktop"))
# Read ModeChoice_input.csv
setwd("C:/Users/ethan/Desktop")
df <- read.csv("MChInput_2015_withColumns_2.3.csv")
source('C:/Users/ethan/Desktop/Outputs.R', echo=TRUE)
source('C:/Users/ethan/Desktop/Outputs.R', echo=TRUE)
data.frame("Null" = s[[20]][[1]], "Time" = 1 - (s[[2]][[1]])/b[[2]][[1]], "Adj." = 1 - (s[[2]][[1]] - k)/b[[2]][[1]]))
data.frame("Null" = s[[20]][[1]], "Time" = 1 - (s[[2]][[1]])/b[[2]][[1]], "Adj." = 1 - (s[[2]][[1]] - k)/b[[2]][[1]])
out = data.frame("Null" = s[[20]][[1]], "Time" = 1 - (s[[2]][[1]])/b[[2]][[1]], "Adj." = 1 - (s[[2]][[1]] - k)/b[[2]][[1]])
out
out[2,] = c(1,2,3)
out
data.frame("Null", "Time", "Adj.")
d = data.frame("Null", "Time", "Adj.")
d[2,] = c(1,2,3)
d
d = data.frame("Call", Null", "Time", "Adj.")
d = data.frame("Call", "Null", "Time", "Adj.")
d[2,] = c("Family",1,2,3)
d
View(df)
out = data.frame("Call", "Null", "Time", "Adj.")
out[nrow(out) + 1,] = c("Family", 1, 2, 3)
write.csv(out, "Outputs.csv")
out = data.frame("Call" = "Reference", "Null" = b[[20]][[1]], "Time" = 0, "Adj." = 0)
out[nrow(out) + 1,] = c("Family", 1, 2, 3)
write.csv(out, "Outputs.csv")
View(s)
s[[17]]
s[[17]][1]
s[[17]][2]
s[[17]][2][1]
s[[17]][[2]][1]
s[[17]][[2]]
s[[17]][[2]][2]
s[[17]][[2]][3]
s[[17]][[2]][4]
s[[17]][[2]][[3]]
out = data.frame("Call" = "Reference", "Null" = b[[20]][[1]], "Time" = 0, "Adj." = 0)
out[nrow(out) + 1,] = c(s[[17]][[2]][[3]], s[[20]][[1]], 1 - s[[2]][[1]]/b[[2]][[1]], 1 - (s[[2]][[1]] - k)/b[[2]][[1]])
write.csv(out, "Outputs.csv")
out[nrow(out) + 1,] = c("Hi", s[[20]][[1]], 1 - s[[2]][[1]]/b[[2]][[1]], 1 - (s[[2]][[1]] - k)/b[[2]][[1]])
out
s[[17]][[2]][[3]]
length(s[[17]][[2]][[3]])
toString(s[[17]][[2]][[3]])
toString(s[[17]][[2]][[3]])[3:]
toString(s[[17]][[2]][[3]])[3:20]
substr(toString(s[[17]][[2]][[3]], 4)
substr(toString(s[[17]][[2]][[3]]), 4)
substr(toString(s[[17]][[2]][[3]]), 4, 10)
substr(toString(s[[17]][[2]][[3]]), 4, length(toString(s[[17]][[2]][[3]]))
substr(toString(s[[17]][[2]][[3]]), 4, length(toString(s[[17]][[2]][[3]])))
substr(toString(s[[17]][[2]][[3]]), 4, length(toString(s[[17]][[2]][[3]])))
length(toString(s[[17]][[2]][[3]]))
toString(s[[17]][[2]][[3]])
substr(toString(s[[17]][[2]][[3]]), 4, nchar(toString(s[[17]][[2]][[3]])))
s[[17]][[2]][[3]]
toString(s[[17]][[2]][[3]])
out = data.frame("Call" = b[[17]][[2]][[3]], "Null" = b[[20]][[1]], "Time" = 0, "Adj." = 0)
s[[17]][[2]][[3]]
s[[17]][[2]][[3]][1]
s[[17]][[2]][[3]][2]
s[[17]][[2]][[3]][3]
toString(s[[17]][[2]][[3]][2])
toString(s[[17]][[2]][[3]][3])
cat(toString(s[[17]][[2]][[3]][2]), " | ", toString(s[[17]][[2]][[3]][3]))
out = data.frame("Call" = "Reference", "Null" = b[[20]][[1]], "Time" = 0, "Adj." = 0)
out[nrow(out) + 1,] = c("Hi", cat(toString(s[[17]][[2]][[3]][2]), " | ", toString(s[[17]][[2]][[3]][3])), 1 - s[[2]][[1]]/b[[2]][[1]], 1 - (s[[2]][[1]] - k)/b[[2]][[1]])
out[nrow(out) + 1,] = c("Hi", paste(toString(s[[17]][[2]][[3]][2]), " | ", toString(s[[17]][[2]][[3]][3])), 1 - s[[2]][[1]]/b[[2]][[1]], 1 - (s[[2]][[1]] - k)/b[[2]][[1]])
out
out = data.frame("Call" = "Reference", "Null" = b[[20]][[1]], "Time" = 0, "Adj." = 0)
out[nrow(out) + 1,] = c("Hi", paste(toString(s[[17]][[2]][[3]][2]), " | ", toString(s[[17]][[2]][[3]][3])), s[[20]][1], 1 - s[[2]][[1]]/b[[2]][[1]], 1 - (s[[2]][[1]] - k)/b[[2]][[1]])
out[nrow(out) + 1,] = c(paste(toString(s[[17]][[2]][[3]][2]), " | ", toString(s[[17]][[2]][[3]][3])), s[[20]][1], 1 - s[[2]][[1]]/b[[2]][[1]], 1 - (s[[2]][[1]] - k)/b[[2]][[1]])
out
out = data.frame("Call" = "Reference", "Null" = b[[20]][[1]], "Time" = 0, "Adj." = 0)
out[nrow(out) + 1,] = c(paste(toString(s[[17]][[2]][[3]][2]), " | ", toString(s[[17]][[2]][[3]][3])), s[[20]][1], 1 - s[[2]][[1]]/b[[2]][[1]], 1 - (s[[2]][[1]] - k)/b[[2]][[1]])
out
formula = mFormula(Mode ~ 0|Family|Time)
mlogit(formula, data = mldf, reflevel = "Auto")
summary(mlogit(formula, data = mldf, reflevel = "Auto"))
s
alls = c(c(mFormula(Mode ~ 0|Family|Time), 1), c(mFormula(Mode ~ 0|Family + Children|Time), 2))
calls
calls = c(c(mFormula(Mode ~ 0|Family|Time), 1), c(mFormula(Mode ~ 0|Family + Children|Time), 2))
calls
calls = list(c(mFormula(Mode ~ 0|Family|Time), 1), c(mFormula(Mode ~ 0|Family + Children|Time), 2))
calls
for (call in calls)
{
print(call)[[1]]
}
for (call in calls)
{
print(call)[[1]]
print(call)[[2]]
}
for (call in calls)
{
print(summary(mlogit(call[[1]], data = mldf, reflevel = "Auto")))
}
out = data.frame("Call" = "Reference", "Null" = b[[20]][[1]], "Time" = 0, "Adj." = 0)
# out[nrow(out) + 1,] = c(paste(toString(s[[17]][[2]][[3]][2]), " | ", toString(s[[17]][[2]][[3]][3])), s[[20]][1], 1 - s[[2]][[1]]/b[[2]][[1]], 1 - (s[[2]][[1]] - k)/b[[2]][[1]])
# write.csv(out, "Outputs.csv")
calls = list(c(mFormula(Mode ~ 0|Family|Time), 1), c(mFormula(Mode ~ 0|Family + Children|Time), 2))
for (call in calls)
{
s = summary(mlogit(call[[1]], data = mldf, reflevel = "Auto"))
out[nrow(out) + 1,] = c(paste(toString(s[[17]][[2]][[3]][2]), " | ", toString(s[[17]][[2]][[3]][3])), s[[20]][1], 1 - s[[2]][[1]]/b[[2]][[1]], 1 - (s[[2]][[1]] - call[[2]])/b[[2]][[1]])
}
out
source('C:/Users/ethan/Desktop/Outputs.R', echo=TRUE)
# Prepare output dataframe
out = data.frame("Call" = paste(toString(b[[17]][[2]][[3]][2]), " | ", toString(b[[17]][[2]][[3]][3])), "Null" = b[[20]][[1]], "Time" = 0, "Adj." = 0)
out
source('C:/Users/ethan/Desktop/Outputs.R', echo=TRUE)
source('C:/Users/ethan/Desktop/Outputs.R', echo=TRUE)
View(df)
source('C:/Users/ethan/Desktop/Outputs.R', echo=TRUE)
source('C:/Users/ethan/Desktop/Outputs.R', echo=TRUE)
source('C:/Users/ethan/Desktop/Outputs.R', echo=TRUE)
source('C:/Users/ethan/Desktop/Outputs.R', echo=TRUE)
source('C:/Users/ethan/Desktop/Outputs.R', echo=TRUE)
source('C:/Users/ethan/Desktop/Outputs.R', echo=TRUE)
source('C:/Users/ethan/Desktop/Outputs.R', echo=TRUE)
source('C:/Users/ethan/Desktop/Outputs.R', echo=TRUE)
source('C:/Users/ethan/Desktop/Outputs.R', echo=TRUE)
source('C:/Users/ethan/Desktop/Outputs.R', echo=TRUE)
source('C:/Users/ethan/Desktop/Outputs.R', echo=TRUE)
for (call in calls)
{
print(call[[1]])
s = summary(mlogit(call[[1]], data = mldf, reflevel = "Auto"))
out[nrow(out) + 1,] = c(paste(toString(s[[17]][[2]][[3]][2]), " | ", toString(s[[17]][[2]][[3]][3])), s[[20]][1], 1 - s[[2]][[1]]/b[[2]][[1]], 1 - (s[[2]][[1]] - call[[2]])/b[[2]][[1]])
}
for (call in calls)
{
print(call[[1]])
s = summary(mlogit(call[[1]], data = mldf, reflevel = "Auto"))
out[nrow(out) + 1,] = c(paste(toString(s[[17]][[2]][[3]][2]), " | ", toString(s[[17]][[2]][[3]][3])), s[[20]][1], 1 - s[[2]][[1]]/b[[2]][[1]], 1 - (s[[2]][[1]] - call[[2]])/b[[2]][[1]])
}
# List of calls and k
calls = list(c(mFormula(Mode ~ 0|Income|Time), 1),
# c(mFormula(Mode ~ 0|Children|Time), 1),
# c(mFormula(Mode ~ 0|Adults|Time), 1),
# c(mFormula(Mode ~ 0|Family|Time), 1),
# c(mFormula(Mode ~ 0|Family + Children|Time), 2),
# c(mFormula(Mode ~ 0|Family + Adults|Time), 2),
# c(mFormula(Mode ~ 0|Adults + Children|Time), 2),
# c(mFormula(Mode ~ 0|Family + Income|Time), 2),
# c(mFormula(Mode ~ 0|Family + Children + Adults|Time), 3),
# c(mFormula(Mode ~ 0|Family + Children + Income|Time), 3),
# c(mFormula(Mode ~ 0|Family + Adults + Income|Time), 3),
# c(mFormula(Mode ~ 0|Family + Children + Adults + Income|Time), 4)
# c(mFormula(Mode ~ 0|Cars|Time), 1),
# c(mFormula(Mode ~ 0|Licence|Time), 1),
# c(mFormula(Mode ~ 0|Car_Avail|Time), 1),
# c(mFormula(Mode ~ 0|Cars + Licence|Time), 2),
# c(mFormula(Mode ~ 0|Cars + Car_Avail|Time), 2),
# c(mFormula(Mode ~ 0|Cars + Income|Time), 2),
# c(mFormula(Mode ~ 0|Income + Licence|Time), 2),
# c(mFormula(Mode ~ 0|Income + Car_Avail|Time), 2),
# c(mFormula(Mode ~ 0|Car_Avail + Licence|Time), 2),
# c(mFormula(Mode ~ 0|Cars + Car_Avail + Licence|Time), 3),
# c(mFormula(Mode ~ 0|Cars + Income + Licence|Time), 3),
# c(mFormula(Mode ~ 0|Cars + Car_Avail + Income|Time), 3),
# c(mFormula(Mode ~ 0|Income + Car_Avail + Licence|Time), 3),
# c(mFormula(Mode ~ 0|Cars + Car_Avail + Licence + Income|Time), 4)
# c(mFormula(Mode ~ 0|Family|Time), 1),
# c(mFormula(Mode ~ 0|Cars|Time), 1),
# c(mFormula(Mode ~ 0|Family + Cars|Time), 2),
# c(mFormula(Mode ~ 0|Family + Children + Cars|Time), 3),
# c(mFormula(Mode ~ 0|Family + Cars + Licence|Time), 3),
# c(mFormula(Mode ~ 0|Family + Cars + Income|Time), 3),
# c(mFormula(Mode ~ 0|Family + Children + Cars + Licence|Time), 4),
# c(mFormula(Mode ~ 0|Family + Children + Cars + Licence + Income|Time), 5),
# c(mFormula(Mode ~ 0|Family + Children + Adults + Cars|Time), 4),
# c(mFormula(Mode ~ 0|Family + Children + Adults + Cars + Income|Time), 5),
# c(mFormula(Mode ~ 0|Family + Cars + Licence + Car_Avail|Time), 4),
# c(mFormula(Mode ~ 0|Family + Cars + Licence + Car_Avail + Income|Time), 5),
# c(mFormula(Mode ~ 0|Family + Children + Adults + Cars + Licence + Car_Avail + Income|Time), 7)
c(mFormula(Mode ~ 0|Gender|Time), 1),
c(mFormula(Mode ~ 0|Level|Time), 1),
c(mFormula(Mode ~ 0|Status|Time), 1),
c(mFormula(Mode ~ 0|Work|Time), 1),
c(mFormula(Mode ~ 0|Gender + Level|Time), 2),
c(mFormula(Mode ~ 0|Gender + Status|Time), 2),
c(mFormula(Mode ~ 0|Gender + Work|Time), 2),
# c(mFormula(Mode ~ 0|Level + Status|Time), 2), # Singular
c(mFormula(Mode ~ 0|Level + Work|Time), 2),
c(mFormula(Mode ~ 0|Status + Work|Time), 2),
c(mFormula(Mode ~ 0|Gender + Level + Status|Time), 3),
c(mFormula(Mode ~ 0|Gender + Level + Work|Time), 3),
c(mFormula(Mode ~ 0|Gender + Status + Work|Time), 3),
c(mFormula(Mode ~ 0|Status + Level + Work|Time), 3),
c(mFormula(Mode ~ 0|Gender + Status + Level + Work|Time), 4)
)
# List of calls and k
calls = list(c(mFormula(Mode ~ 0|Income|Time), 1),
# c(mFormula(Mode ~ 0|Children|Time), 1),
# c(mFormula(Mode ~ 0|Adults|Time), 1),
# c(mFormula(Mode ~ 0|Family|Time), 1),
# c(mFormula(Mode ~ 0|Family + Children|Time), 2),
# c(mFormula(Mode ~ 0|Family + Adults|Time), 2),
# c(mFormula(Mode ~ 0|Adults + Children|Time), 2),
# c(mFormula(Mode ~ 0|Family + Income|Time), 2),
# c(mFormula(Mode ~ 0|Family + Children + Adults|Time), 3),
# c(mFormula(Mode ~ 0|Family + Children + Income|Time), 3),
# c(mFormula(Mode ~ 0|Family + Adults + Income|Time), 3),
# c(mFormula(Mode ~ 0|Family + Children + Adults + Income|Time), 4)
# c(mFormula(Mode ~ 0|Cars|Time), 1),
# c(mFormula(Mode ~ 0|Licence|Time), 1),
# c(mFormula(Mode ~ 0|Car_Avail|Time), 1),
# c(mFormula(Mode ~ 0|Cars + Licence|Time), 2),
# c(mFormula(Mode ~ 0|Cars + Car_Avail|Time), 2),
# c(mFormula(Mode ~ 0|Cars + Income|Time), 2),
# c(mFormula(Mode ~ 0|Income + Licence|Time), 2),
# c(mFormula(Mode ~ 0|Income + Car_Avail|Time), 2),
# c(mFormula(Mode ~ 0|Car_Avail + Licence|Time), 2),
# c(mFormula(Mode ~ 0|Cars + Car_Avail + Licence|Time), 3),
# c(mFormula(Mode ~ 0|Cars + Income + Licence|Time), 3),
# c(mFormula(Mode ~ 0|Cars + Car_Avail + Income|Time), 3),
# c(mFormula(Mode ~ 0|Income + Car_Avail + Licence|Time), 3),
# c(mFormula(Mode ~ 0|Cars + Car_Avail + Licence + Income|Time), 4)
# c(mFormula(Mode ~ 0|Family|Time), 1),
# c(mFormula(Mode ~ 0|Cars|Time), 1),
# c(mFormula(Mode ~ 0|Family + Cars|Time), 2),
# c(mFormula(Mode ~ 0|Family + Children + Cars|Time), 3),
# c(mFormula(Mode ~ 0|Family + Cars + Licence|Time), 3),
# c(mFormula(Mode ~ 0|Family + Cars + Income|Time), 3),
# c(mFormula(Mode ~ 0|Family + Children + Cars + Licence|Time), 4),
# c(mFormula(Mode ~ 0|Family + Children + Cars + Licence + Income|Time), 5),
# c(mFormula(Mode ~ 0|Family + Children + Adults + Cars|Time), 4),
# c(mFormula(Mode ~ 0|Family + Children + Adults + Cars + Income|Time), 5),
# c(mFormula(Mode ~ 0|Family + Cars + Licence + Car_Avail|Time), 4),
# c(mFormula(Mode ~ 0|Family + Cars + Licence + Car_Avail + Income|Time), 5),
# c(mFormula(Mode ~ 0|Family + Children + Adults + Cars + Licence + Car_Avail + Income|Time), 7)
c(mFormula(Mode ~ 0|Gender|Time), 1),
c(mFormula(Mode ~ 0|Level|Time), 1),
c(mFormula(Mode ~ 0|Status|Time), 1),
c(mFormula(Mode ~ 0|Work|Time), 1),
c(mFormula(Mode ~ 0|Gender + Level|Time), 2),
c(mFormula(Mode ~ 0|Gender + Status|Time), 2),
c(mFormula(Mode ~ 0|Gender + Work|Time), 2),
# c(mFormula(Mode ~ 0|Level + Status|Time), 2), # Singular
c(mFormula(Mode ~ 0|Level + Work|Time), 2),
c(mFormula(Mode ~ 0|Status + Work|Time), 2),
# c(mFormula(Mode ~ 0|Gender + Level + Status|Time), 3),
c(mFormula(Mode ~ 0|Gender + Level + Work|Time), 3),
c(mFormula(Mode ~ 0|Gender + Status + Work|Time), 3),
c(mFormula(Mode ~ 0|Status + Level + Work|Time), 3),
# c(mFormula(Mode ~ 0|Gender + Status + Level + Work|Time), 4)
)
# List of calls and k
calls = list(c(mFormula(Mode ~ 0|Income|Time), 1),
# c(mFormula(Mode ~ 0|Children|Time), 1),
# c(mFormula(Mode ~ 0|Adults|Time), 1),
# c(mFormula(Mode ~ 0|Family|Time), 1),
# c(mFormula(Mode ~ 0|Family + Children|Time), 2),
# c(mFormula(Mode ~ 0|Family + Adults|Time), 2),
# c(mFormula(Mode ~ 0|Adults + Children|Time), 2),
# c(mFormula(Mode ~ 0|Family + Income|Time), 2),
# c(mFormula(Mode ~ 0|Family + Children + Adults|Time), 3),
# c(mFormula(Mode ~ 0|Family + Children + Income|Time), 3),
# c(mFormula(Mode ~ 0|Family + Adults + Income|Time), 3),
# c(mFormula(Mode ~ 0|Family + Children + Adults + Income|Time), 4)
# c(mFormula(Mode ~ 0|Cars|Time), 1),
# c(mFormula(Mode ~ 0|Licence|Time), 1),
# c(mFormula(Mode ~ 0|Car_Avail|Time), 1),
# c(mFormula(Mode ~ 0|Cars + Licence|Time), 2),
# c(mFormula(Mode ~ 0|Cars + Car_Avail|Time), 2),
# c(mFormula(Mode ~ 0|Cars + Income|Time), 2),
# c(mFormula(Mode ~ 0|Income + Licence|Time), 2),
# c(mFormula(Mode ~ 0|Income + Car_Avail|Time), 2),
# c(mFormula(Mode ~ 0|Car_Avail + Licence|Time), 2),
# c(mFormula(Mode ~ 0|Cars + Car_Avail + Licence|Time), 3),
# c(mFormula(Mode ~ 0|Cars + Income + Licence|Time), 3),
# c(mFormula(Mode ~ 0|Cars + Car_Avail + Income|Time), 3),
# c(mFormula(Mode ~ 0|Income + Car_Avail + Licence|Time), 3),
# c(mFormula(Mode ~ 0|Cars + Car_Avail + Licence + Income|Time), 4)
# c(mFormula(Mode ~ 0|Family|Time), 1),
# c(mFormula(Mode ~ 0|Cars|Time), 1),
# c(mFormula(Mode ~ 0|Family + Cars|Time), 2),
# c(mFormula(Mode ~ 0|Family + Children + Cars|Time), 3),
# c(mFormula(Mode ~ 0|Family + Cars + Licence|Time), 3),
# c(mFormula(Mode ~ 0|Family + Cars + Income|Time), 3),
# c(mFormula(Mode ~ 0|Family + Children + Cars + Licence|Time), 4),
# c(mFormula(Mode ~ 0|Family + Children + Cars + Licence + Income|Time), 5),
# c(mFormula(Mode ~ 0|Family + Children + Adults + Cars|Time), 4),
# c(mFormula(Mode ~ 0|Family + Children + Adults + Cars + Income|Time), 5),
# c(mFormula(Mode ~ 0|Family + Cars + Licence + Car_Avail|Time), 4),
# c(mFormula(Mode ~ 0|Family + Cars + Licence + Car_Avail + Income|Time), 5),
# c(mFormula(Mode ~ 0|Family + Children + Adults + Cars + Licence + Car_Avail + Income|Time), 7)
c(mFormula(Mode ~ 0|Gender|Time), 1),
c(mFormula(Mode ~ 0|Level|Time), 1),
c(mFormula(Mode ~ 0|Status|Time), 1),
c(mFormula(Mode ~ 0|Work|Time), 1),
c(mFormula(Mode ~ 0|Gender + Level|Time), 2),
c(mFormula(Mode ~ 0|Gender + Status|Time), 2),
c(mFormula(Mode ~ 0|Gender + Work|Time), 2),
# c(mFormula(Mode ~ 0|Level + Status|Time), 2), # Singular
c(mFormula(Mode ~ 0|Level + Work|Time), 2),
c(mFormula(Mode ~ 0|Status + Work|Time), 2),
# c(mFormula(Mode ~ 0|Gender + Level + Status|Time), 3),
c(mFormula(Mode ~ 0|Gender + Level + Work|Time), 3),
c(mFormula(Mode ~ 0|Gender + Status + Work|Time), 3),
c(mFormula(Mode ~ 0|Status + Level + Work|Time), 3)
# c(mFormula(Mode ~ 0|Gender + Status + Level + Work|Time), 4)
)
for (call in calls)
{
print(call[[1]])
s = summary(mlogit(call[[1]], data = mldf, reflevel = "Auto"))
out[nrow(out) + 1,] = c(paste(toString(s[[17]][[2]][[3]][2]), " | ", toString(s[[17]][[2]][[3]][3])), s[[20]][1], 1 - s[[2]][[1]]/b[[2]][[1]], 1 - (s[[2]][[1]] - call[[2]])/b[[2]][[1]])
}
source('C:/Users/ethan/Desktop/Outputs.R', echo=TRUE)
source('C:/Users/ethan/Desktop/Outputs.R', echo=TRUE)
source('C:/Users/ethan/Desktop/Outputs.R', echo=TRUE)
source('C:/Users/ethan/Desktop/Outputs.R', echo=TRUE)
getwd()
source('~/Ethan/TMG/Research/PORPOS-TMG/R_Logit_Models/Mode Choice Models/Variables/Outputs.R', echo=TRUE)
