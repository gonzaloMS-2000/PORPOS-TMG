df$Licence = as.factor(df$Licence)
df$Work = as.factor(df$Work)
df$Family = as.factor(df$Family)
df$Level = as.factor(df$Level)
# Remove outliers
df_mode <- df[!(df$Time.Active > 600),]
df_mode <- df_mode[!(df_mode$Time.Transit > 200),]
df_mode <- df_mode[!(df_mode$Time.Auto > 150),]
# Filter unavailable choices
df_mode <- df_mode[!((df_mode$Mode == "Active") & df_mode$Time.Active >= 300),]
df_mode <- df_mode[!((df_mode$Mode == "Auto") & df_mode$Cars <= 0),]
# df_mode <- df_mode[!(df_mode$Time.Active >= 300 & df_mode$Cars <= 0),]
# Transform dataframe from wide to long
mldf = mlogit.data(df_mode, varying = 12:14, choice = "Mode", shape = "wide")
# head(mldf, 12)
# Column for availability
mldf$available = (mldf$alt == "Auto" & mldf$Cars > 0) | (mldf$alt == "Transit") | (mldf$alt == "Active" & mldf$Time < 300)
# table(mldf$available)
# Run MNL model
model = mlogit(Mode ~ 0| 1 | Time, data = mldf, reflevel = "Auto", subset = mldf$available)
print(summary(model))
source('~/Ethan/TMG/Research/PORPOS-TMG/R_Logit_Models/Mode Choice Models/Availability/Availability.R', echo=TRUE)
# # Filter unavailable choices
# df_mode <- df_mode[!((df_mode$Mode == "Active") & df_mode$Time.Active >= 300),]
# # df_mode <- df_mode[!((df_mode$Mode == "Auto") & df_mode$Cars <= 0),]
# # df_mode <- df_mode[!(df_mode$Time.Active >= 300 & df_mode$Cars <= 0),]
#
# Transform dataframe from wide to long
mldf = mlogit.data(df_mode, varying = 13:15, choice = "Mode", shape = "wide")
model = mlogit(Mode ~ 0| 1 | Time, data = mldf, reflevel = "Transit")
View(model)
model[[6]]
summary(model[[6]])
summary(model[[7]])
(model[[7]])
summary(model[[6]])
fitted(model)
fitted(model, type="outcome")
summary(fitted(model, type="outcome"))
summary(fitted(model, type="probabilities"))
summary(fitted(model, type="linpred"))
summary(fitted(model, type="parameters"))
fitted(model, type="parameters")
summary(fitted(model, type="parameters", digits=3))
summary(fitted(model, type="probabilities", digits=3))
summary(fitted(model, type="probabilities", width=5))
summary(fitted(model))
mean(fitted(model))
summary(summary(fitted(model)))
summary(summary(summary(fitted(model))))
summary(summary(summary(summary(fitted(model)))))
mean(fitted(model))
predict(
model
)
predict(model, newdata=mldf)
summary(predict(model, newdata=mldf))
summary(fitted(model))
summary(fitted(model, type="predictions"))
summary(fitted(model, type="probabilities"))
model = mlogit(Mode ~ 0| 1 | Time, data = mldf, reflevel = "Transit", subset = (mldf$alt == "Auto") | (mldf$alt == "Transit") | (mldf$alt == "Active" & mldf$Time < 30))
summary(predict(model, newdata=mldf, outcome=TRUE))
summary(predict(model, newdata=mldf, outcome=FALSE))
summary(predict(model, newdata=mldf, type="outcome"))
x = predict(model, newdata=mldf)
View(x)
x = predict(model, newdata=mldf, returnData = TRUE)
View(x)
for (row in 1:nrows(mldf))
{
row$prob.tr = 0
}
for (row in 1:nrow(mldf))
{
row$prob.tr = 0
}
warnings()
mldf$prob.tr = x$Transit
x
x = predict(model, newdata=mldf)
x
mldf$prob.tr = x$Transit
x$Transit
x[[1]]
x[1]
head(x)
typeof(x)
class(x)
length(x)
df <- read.csv("MChInput_2015_withColumns_2.3.csv")
# Reformat data
df$Mode = relevel(as.factor(df$Mode), "Auto")
df$Income = as.factor(df$Income)
df$Status = as.factor(df$Status)
df$Gender = as.factor(df$Gender)
df$Licence = as.factor(df$Licence)
df$Car_Avail = as.factor(df$Car_Avail)
df$Work = as.factor(df$Work)
df$Family = as.factor(df$Family)
df$Level = as.factor(df$Level)
# Remove outliers
# df_mode <- df[!(df$Time.Active > 600),]
# df_mode <- df_mode[!(df_mode$Time.Transit > 200),]
# df_mode <- df_mode[!(df_mode$Time.Auto > 150),]
df_mode <- df[!(df$Time.Auto > 1e3),]
# Transform dataframe from wide to long
mldf = mlogit.data(df_mode, varying = 13:15, choice = "Mode", shape = "wide")
# Run model
model = mlogit(Mode ~ 0| 1 | Time, data = mldf, reflevel = "Transit")
predict(model)
predict(model, newdata=mldf)
x = predict(model, newdata=mldf)
as.data.frame(x)
y = as.data.frame(x)
y$Transit
head(y)
mldf$prob.tr = y$Transit
head(mldf)
head(y)
df_mode$prob.tr = probs$Transit
# out = data.frame("Threshold" = -1, "R^2" = summary(model)[[20]][1], "Accuracy" = )
probs = as.data.frame(predict(model, newdata = mldf))
df_mode$prob.tr = probs$Transit
probs = as.data.frame(predict(model, newdata = mldf))
df_mode$prob.tr = probs$Transit
df_mode$prob.ac = probs$Active
df_mode$prob.au = probs$Auto
df_mode$prob.ch = ifelse(df_mode$Mode == "Transit", df_mode$prob.tr, ifelse(df_mode$Mode == "Active", df_mode$prob.ac, df_mode$prob.au))
head(df_mode)
mean(df_mode$prob.ch)
mean(fitted(model, type="outcome"))
mean(ifelse(df_mode$Mode == "Transit", df_mode$prob.tr, ifelse(df_mode$Mode == "Active", df_mode$prob.ac, df_mode$prob.au)))
mean(ifelse(df_mode$Mode == "Transit", df_mode$probs$Transit, ifelse(df_mode$Mode == "Active", df_mode$probs$Active, df_mode$probs$Auto)))
mean(fitted(model))
df <- read.csv("MChInput_2015_withColumns_2.3.csv")
# Reformat data
df$Mode = relevel(as.factor(df$Mode), "Auto")
df$Income = as.factor(df$Income)
df$Status = as.factor(df$Status)
df$Gender = as.factor(df$Gender)
df$Licence = as.factor(df$Licence)
df$Car_Avail = as.factor(df$Car_Avail)
df$Work = as.factor(df$Work)
df$Family = as.factor(df$Family)
df$Level = as.factor(df$Level)
# Remove outliers
df_mode <- df[!(df$Time.Auto > 1e3),]
# Transform dataframe from wide to long
mldf = mlogit.data(df_mode, varying = 13:15, choice = "Mode", shape = "wide")
# Run reference model
model = mlogit(Mode ~ 0| 1 | Time, data = mldf, reflevel = "Transit")
# Predict on full sample
probs = as.data.frame(predict(model, newdata = mldf))
df_mode$prob.tr = probs$Transit
df_mode$prob.ac = probs$Active
df_mode$prob.au = probs$Auto
out = data.frame("Threshold" = -1,
"R^2" = summary(model)[[20]][1],
"In-Sample Accuracy" = mean(fitted(model)),
"Full Sample Accuracy" = mean(fitted(model)))
# for (t in c(seq(15, 23, by=2), seq(25, 37, by=0.2), seq(40, 60, by=5), seq(75, 120, by=15), seq(180, 300, by=60)))
for (t in c(seq(25, 35, by=1)))
{
print(t)
df_mode2 <- df[!(df$Time.Auto > 1e3),]
df_mode2 <- df_mode2[!((df_mode$Mode == "Active") & df_mode$Time.Active >= t),]
mldf2 = mlogit.data(df_mode2, varying = 13:15, choice = "Mode", shape = "wide")
mldf2$available = (mldf2$alt == "Auto") | (mldf2$alt == "Transit") | (mldf2$alt == "Active" & mldf2$Time < t)
model = mlogit(Mode ~ 0| 1 | Time, data = mldf2, reflevel = "Transit", subset = mldf2$available)
probs = as.data.frame(predict(model, newdata = mldf))
df_mode$prob.tr = probs$Transit
df_mode$prob.ac = probs$Active
df_mode$prob.au = probs$Auto
out[nrow(out)+1,] = c(t, summary(model)[[20]][1], mean(fitted(model)),
mean(ifelse(df_mode$Mode == "Transit", df_mode$prob.tr,
ifelse(df_mode$Mode == "Active", df_mode$prob.ac,
df_mode$prob.au))))
# print(cat("Threshold = ", t, "\tR^2: ", summary(model)[[20]][[1]]))
}
#
# write.csv(out, "Active_Thresholds.csv")
out
df <- read.csv("MChInput_2015_withColumns_2.3.csv")
# Reformat data
df$Mode = relevel(as.factor(df$Mode), "Auto")
df$Income = as.factor(df$Income)
df$Status = as.factor(df$Status)
df$Gender = as.factor(df$Gender)
df$Licence = as.factor(df$Licence)
df$Car_Avail = as.factor(df$Car_Avail)
df$Work = as.factor(df$Work)
df$Family = as.factor(df$Family)
df$Level = as.factor(df$Level)
# Remove outliers
df_mode <- df[!(df$Time.Auto > 1e3),]
# Transform dataframe from wide to long
mldf = mlogit.data(df_mode, varying = 13:15, choice = "Mode", shape = "wide")
# Run reference model
model = mlogit(Mode ~ 0| 1 | Time, data = mldf, reflevel = "Transit")
# Predict on full sample
probs = as.data.frame(predict(model, newdata = mldf))
df_mode$prob.tr = probs$Transit
df_mode$prob.ac = probs$Active
df_mode$prob.au = probs$Auto
out = data.frame("Threshold" = -1,
"R^2" = summary(model)[[20]][1],
"In-Sample Accuracy" = mean(fitted(model)),
"Full Sample Accuracy" = mean(fitted(model)))
for (t in c(seq(15, 23, by=2), seq(25, 37, by=0.2), seq(40, 60, by=5), seq(75, 120, by=15), seq(180, 300, by=60)))
# for (t in c(seq(25, 35, by=1)))
{
print(t)
df_mode2 <- df[!(df$Time.Auto > 1e3),]
df_mode2 <- df_mode2[!((df_mode$Mode == "Active") & df_mode$Time.Active >= t),]
mldf2 = mlogit.data(df_mode2, varying = 13:15, choice = "Mode", shape = "wide")
mldf2$available = (mldf2$alt == "Auto") | (mldf2$alt == "Transit") | (mldf2$alt == "Active" & mldf2$Time < t)
model = mlogit(Mode ~ 0| 1 | Time, data = mldf2, reflevel = "Transit", subset = mldf2$available)
probs = as.data.frame(predict(model, newdata = mldf))
df_mode$prob.tr = probs$Transit
df_mode$prob.ac = probs$Active
df_mode$prob.au = probs$Auto
out[nrow(out)+1,] = c(t, summary(model)[[20]][1], mean(fitted(model)),
mean(ifelse(df_mode$Mode == "Transit", df_mode$prob.tr,
ifelse(df_mode$Mode == "Active", df_mode$prob.ac,
df_mode$prob.au))))
# print(cat("Threshold = ", t, "\tR^2: ", summary(model)[[20]][[1]]))
}
#
# write.csv(out, "Active_Thresholds.csv")
out
#
write.csv(out, "Active_Thresholds_Accuracy.csv")
df <- read.csv("MChInput_2015_withColumns_2.3.csv")
# Reformat data
df$Mode = relevel(as.factor(df$Mode), "Auto")
df$Income = as.factor(df$Income)
df$Status = as.factor(df$Status)
df$Gender = as.factor(df$Gender)
df$Licence = as.factor(df$Licence)
df$Car_Avail = as.factor(df$Car_Avail)
df$Work = as.factor(df$Work)
df$Family = as.factor(df$Family)
df$Level = as.factor(df$Level)
# Remove outliers
df_mode <- df[!(df$Time.Auto > 1e3),]
# Transform dataframe from wide to long
mldf = mlogit.data(df_mode, varying = 13:15, choice = "Mode", shape = "wide")
# Run reference model
model = mlogit(Mode ~ 0| 1 | Time, data = mldf, reflevel = "Transit")
# Predict on full sample
probs = as.data.frame(predict(model, newdata = mldf))
df_mode$prob.tr = probs$Transit
df_mode$prob.ac = probs$Active
df_mode$prob.au = probs$Auto
out = data.frame("Threshold" = -1,
"R^2" = summary(model)[[20]][1],
"In-Sample Accuracy" = mean(fitted(model)),
"Full Sample Accuracy" = mean(fitted(model)))
# for (t in c(seq(15, 23, by=2), seq(25, 37, by=0.2), seq(40, 60, by=5), seq(75, 120, by=15), seq(180, 300, by=60)))
# for (t in c(seq(25, 35, by=1)))
for (t in c(seq(15, 39, by=2), seq(40, 50, by=0.2), seq(51, 55, by=1), seq(60, 120, by=15), seq(180, 300, by=60)))
{
print(t)
df_mode2 <- df[!(df$Time.Auto > 1e3),]
df_mode2 <- df_mode2[!((df_mode$Mode == "Active") & df_mode$Time.Active >= t),]
mldf2 = mlogit.data(df_mode2, varying = 13:15, choice = "Mode", shape = "wide")
mldf2$available = (mldf2$alt == "Auto") | (mldf2$alt == "Transit") | (mldf2$alt == "Active" & mldf2$Time < t)
model = mlogit(Mode ~ 0| 1 | Time, data = mldf2, reflevel = "Transit", subset = mldf2$available)
probs = as.data.frame(predict(model, newdata = mldf))
df_mode$prob.tr = probs$Transit
df_mode$prob.ac = probs$Active
df_mode$prob.au = probs$Auto
out[nrow(out)+1,] = c(t, summary(model)[[20]][1], mean(fitted(model)),
mean(ifelse(df_mode$Mode == "Transit", df_mode$prob.tr,
ifelse(df_mode$Mode == "Active", df_mode$prob.ac,
df_mode$prob.au))))
# print(cat("Threshold = ", t, "\tR^2: ", summary(model)[[20]][[1]]))
}
write.csv(out, "Active_Thresholds_Accuracy_40.csv")
mean(fitted(model)
)
nrow(df_mode)
nrow(df_mode) * mean(fitted(model))
nrow(df_mode) * mean(fitted(model)) / 14839
for (t in c(seq(25, 35, by=1)))
# for (t in c(seq(15, 39, by=2), seq(40, 50, by=0.2), seq(51, 55, by=1), seq(60, 120, by=15), seq(180, 300, by=60)))
{
# print(t)
df_mode2 <- df[!(df$Time.Auto > 1e3),]
df_mode2 <- df_mode2[!((df_mode$Mode == "Active") & df_mode$Time.Active >= t),]
mldf2 = mlogit.data(df_mode2, varying = 13:15, choice = "Mode", shape = "wide")
mldf2$available = (mldf2$alt == "Auto") | (mldf2$alt == "Transit") | (mldf2$alt == "Active" & mldf2$Time < t)
out[nrow(out)+1,] = c(t, summary(model)[[20]][1], mean(fitted(model)),
nrow(df_mode2) * mean(fitted(model)) / nrow(df_mode))
print(cat("Threshold = ", t, "\tAccuracy: ", nrow(df_mode2) * mean(fitted(model)) / nrow(df_mode)))
}
for (t in c(seq(40, 200, by=5)))
# for (t in c(seq(15, 39, by=2), seq(40, 50, by=0.2), seq(51, 55, by=1), seq(60, 120, by=15), seq(180, 300, by=60)))
{
# print(t)
df_mode2 <- df[!(df$Time.Auto > 1e3),]
df_mode2 <- df_mode2[!((df_mode$Mode == "Active") & df_mode$Time.Active >= t),]
mldf2 = mlogit.data(df_mode2, varying = 13:15, choice = "Mode", shape = "wide")
mldf2$available = (mldf2$alt == "Auto") | (mldf2$alt == "Transit") | (mldf2$alt == "Active" & mldf2$Time < t)
out[nrow(out)+1,] = c(t, summary(model)[[20]][1], mean(fitted(model)),
nrow(df_mode2) * mean(fitted(model)) / nrow(df_mode))
print(cat("Threshold = ", t, "\tAccuracy: ", nrow(df_mode2) * mean(fitted(model)) / nrow(df_mode)))
}
for (t in c(seq(200, 300, by=5)))
# for (t in c(seq(15, 39, by=2), seq(40, 50, by=0.2), seq(51, 55, by=1), seq(60, 120, by=15), seq(180, 300, by=60)))
{
# print(t)
df_mode2 <- df[!(df$Time.Auto > 1e3),]
df_mode2 <- df_mode2[!((df_mode$Mode == "Active") & df_mode$Time.Active >= t),]
mldf2 = mlogit.data(df_mode2, varying = 13:15, choice = "Mode", shape = "wide")
mldf2$available = (mldf2$alt == "Auto") | (mldf2$alt == "Transit") | (mldf2$alt == "Active" & mldf2$Time < t)
out[nrow(out)+1,] = c(t, summary(model)[[20]][1], mean(fitted(model)),
nrow(df_mode2) * mean(fitted(model)) / nrow(df_mode))
print(cat("Threshold = ", t, "\tAccuracy: ", nrow(df_mode2) * mean(fitted(model)) / nrow(df_mode)))
}
# write.csv(out, "Active_Thresholds_Accuracy_40.csv")
for (t in c(seq(20, 35, by=1)))
# for (t in c(seq(15, 39, by=2), seq(40, 50, by=0.2), seq(51, 55, by=1), seq(60, 120, by=15), seq(180, 300, by=60)))
{
# print(t)
df_mode2 <- df[!(df$Time.Auto > 1e3),]
df_mode2 <- df_mode2[!((df_mode$Mode == "Active") & df_mode$Time.Active >= t),]
mldf2 = mlogit.data(df_mode2, varying = 13:15, choice = "Mode", shape = "wide")
mldf2$available = (mldf2$alt == "Auto") | (mldf2$alt == "Transit") | (mldf2$alt == "Active" & mldf2$Time < t)
model = mlogit(Mode ~ 0| 1 | Time, data = mldf2, reflevel = "Transit", subset = mldf2$available)
out[nrow(out)+1,] = c(t, summary(model)[[20]][1], mean(fitted(model)),
nrow(df_mode2) * mean(fitted(model)) / nrow(df_mode))
# print(nrow(df_mode2))
print(cat("Threshold = ", t, "\tAccuracy: ", nrow(df_mode2) * mean(fitted(model)) / nrow(df_mode)))
}
for (t in c(seq(20, 60, by=5)))
# for (t in c(seq(15, 39, by=2), seq(40, 50, by=0.2), seq(51, 55, by=1), seq(60, 120, by=15), seq(180, 300, by=60)))
{
# print(t)
df_mode2 <- df[!(df$Time.Auto > 1e3),]
df_mode2 <- df_mode2[!((df_mode$Mode == "Active") & df_mode$Time.Active >= t),]
mldf2 = mlogit.data(df_mode2, varying = 13:15, choice = "Mode", shape = "wide")
mldf2$available = (mldf2$alt == "Auto") | (mldf2$alt == "Transit") | (mldf2$alt == "Active" & mldf2$Time < t)
model = mlogit(Mode ~ 0| 1 | Time, data = mldf2, reflevel = "Transit", subset = mldf2$available)
out[nrow(out)+1,] = c(t, summary(model)[[20]][1], mean(fitted(model)),
nrow(df_mode2) * mean(fitted(model)) / nrow(df_mode))
# print(nrow(df_mode2))
print(cat("Threshold = ", t, "\tAccuracy: ", nrow(df_mode2) * mean(fitted(model)) / nrow(df_mode)))
}
for (t in c(seq(60, 100, by=5)))
# for (t in c(seq(15, 39, by=2), seq(40, 50, by=0.2), seq(51, 55, by=1), seq(60, 120, by=15), seq(180, 300, by=60)))
{
# print(t)
df_mode2 <- df[!(df$Time.Auto > 1e3),]
df_mode2 <- df_mode2[!((df_mode$Mode == "Active") & df_mode$Time.Active >= t),]
mldf2 = mlogit.data(df_mode2, varying = 13:15, choice = "Mode", shape = "wide")
mldf2$available = (mldf2$alt == "Auto") | (mldf2$alt == "Transit") | (mldf2$alt == "Active" & mldf2$Time < t)
model = mlogit(Mode ~ 0| 1 | Time, data = mldf2, reflevel = "Transit", subset = mldf2$available)
out[nrow(out)+1,] = c(t, summary(model)[[20]][1], mean(fitted(model)),
nrow(df_mode2) * mean(fitted(model)) / nrow(df_mode))
# print(nrow(df_mode2))
print(cat("Threshold = ", t, "\tAccuracy: ", nrow(df_mode2) * mean(fitted(model)) / nrow(df_mode)))
}
# write.csv(out, "Active_Thresholds_Accuracy_40.csv")
for (t in c(seq(40, 60, by=5)))
# for (t in c(seq(15, 39, by=2), seq(40, 50, by=0.2), seq(51, 55, by=1), seq(60, 120, by=15), seq(180, 300, by=60)))
{
# print(t)
df_mode2 <- df[!(df$Time.Auto > 1e3),]
df_mode2 <- df_mode2[!((df_mode$Mode == "Active") & df_mode$Time.Active >= t),]
mldf2 = mlogit.data(df_mode2, varying = 13:15, choice = "Mode", shape = "wide")
mldf2$available = (mldf2$alt == "Auto") | (mldf2$alt == "Transit") | (mldf2$alt == "Active" & mldf2$Time < t)
model = mlogit(Mode ~ 0| 1 | Time, data = mldf2, reflevel = "Transit", subset = mldf2$available)
out[nrow(out)+1,] = c(t, summary(model)[[20]][1], mean(fitted(model)),
nrow(df_mode2) * mean(fitted(model)) / nrow(df_mode))
# print(nrow(df_mode2))
print(cat("Threshold = ", t, "\tAccuracy: ", nrow(df_mode2) * mean(fitted(model)) / nrow(df_mode)))
}
# write.csv(out, "Active_Thresholds_Accuracy_40.csv")
df <- read.csv("MChInput_2015_withColumns_2.3.csv")
# Reformat data
df$Mode = relevel(as.factor(df$Mode), "Auto")
df$Income = as.factor(df$Income)
df$Status = as.factor(df$Status)
df$Gender = as.factor(df$Gender)
df$Licence = as.factor(df$Licence)
df$Car_Avail = as.factor(df$Car_Avail)
df$Work = as.factor(df$Work)
df$Family = as.factor(df$Family)
df$Level = as.factor(df$Level)
# Remove outliers
df_mode <- df[!(df$Time.Auto > 1e3),]
# Transform dataframe from wide to long
mldf = mlogit.data(df_mode, varying = 13:15, choice = "Mode", shape = "wide")
# Run reference model
model = mlogit(Mode ~ 0| 1 | Time, data = mldf, reflevel = "Transit")
out = data.frame("Threshold" = -1,
"R^2" = summary(model)[[20]][1],
"In-Sample Accuracy" = mean(fitted(model)),
"Full Sample Accuracy" = mean(fitted(model)))
# for (t in c(seq(15, 23, by=2), seq(25, 37, by=0.2), seq(40, 60, by=5), seq(75, 120, by=15), seq(180, 300, by=60)))
# for (t in c(seq(25, 35, by=1)))
# for (t in c(seq(15, 39, by=2), seq(40, 50, by=0.2), seq(51, 55, by=1), seq(60, 120, by=15), seq(180, 300, by=60)))
# {
#   print(t)
#   df_mode2 <- df[!(df$Time.Auto > 1e3),]
#   df_mode2 <- df_mode2[!((df_mode$Mode == "Active") & df_mode$Time.Active >= t),]
#   mldf2 = mlogit.data(df_mode2, varying = 13:15, choice = "Mode", shape = "wide")
#   mldf2$available = (mldf2$alt == "Auto") | (mldf2$alt == "Transit") | (mldf2$alt == "Active" & mldf2$Time < t)
#   model = mlogit(Mode ~ 0| 1 | Time, data = mldf2, reflevel = "Transit", subset = mldf2$available)
#
#   probs = as.data.frame(predict(model, newdata = mldf))
#   df_mode$prob.tr = probs$Transit
#   df_mode$prob.ac = probs$Active
#   df_mode$prob.au = probs$Auto
#
#   out[nrow(out)+1,] = c(t, summary(model)[[20]][1], mean(fitted(model)),
#                         mean(ifelse(df_mode$Mode == "Transit", df_mode$prob.tr,
#                              ifelse(df_mode$Mode == "Active", df_mode$prob.ac,
#                                     df_mode$prob.au))))
#   # print(cat("Threshold = ", t, "\tR^2: ", summary(model)[[20]][[1]]))
# }
# for (t in c(seq(15, 23, by=2), seq(25, 37, by=0.2), seq(40, 60, by=5), seq(75, 120, by=15), seq(180, 300, by=60)))
# for (t in c(seq(40, 60, by=5)))
for (t in c(seq(15, 39, by=2), seq(40, 50, by=0.2), seq(51, 55, by=1), seq(60, 120, by=15), seq(180, 300, by=60)))
{
# print(t)
df_mode2 <- df[!(df$Time.Auto > 1e3),]
df_mode2 <- df_mode2[!((df_mode$Mode == "Active") & df_mode$Time.Active >= t),]
mldf2 = mlogit.data(df_mode2, varying = 13:15, choice = "Mode", shape = "wide")
mldf2$available = (mldf2$alt == "Auto") | (mldf2$alt == "Transit") | (mldf2$alt == "Active" & mldf2$Time < t)
model = mlogit(Mode ~ 0| 1 | Time, data = mldf2, reflevel = "Transit", subset = mldf2$available)
out[nrow(out)+1,] = c(t, summary(model)[[20]][1], mean(fitted(model)),
nrow(df_mode2) * mean(fitted(model)) / nrow(df_mode))
# print(nrow(df_mode2))
print(cat("Threshold = ", t, "\tAccuracy: ", nrow(df_mode2) * mean(fitted(model)) / nrow(df_mode)))
}
out
write.csv(out, "Active_Thresholds_Accuracy_Revised.csv")
for (t in c(seq(15, 33, by=2), seq(35, 50, by=0.2), seq(51, 55, by=1), seq(60, 120, by=15), seq(180, 300, by=60)))
{
# print(t)
df_mode2 <- df[!(df$Time.Auto > 1e3),]
df_mode2 <- df_mode2[!((df_mode$Mode == "Active") & df_mode$Time.Active >= t),]
mldf2 = mlogit.data(df_mode2, varying = 13:15, choice = "Mode", shape = "wide")
mldf2$available = (mldf2$alt == "Auto") | (mldf2$alt == "Transit") | (mldf2$alt == "Active" & mldf2$Time < t)
model = mlogit(Mode ~ 0| 1 | Time, data = mldf2, reflevel = "Transit", subset = mldf2$available)
out[nrow(out)+1,] = c(t, summary(model)[[20]][1], mean(fitted(model)),
nrow(df_mode2) * mean(fitted(model)) / nrow(df_mode))
# print(nrow(df_mode2))
print(cat("Threshold = ", t, "\tAccuracy: ", nrow(df_mode2) * mean(fitted(model)) / nrow(df_mode)))
}
write.csv(out, "Active_Thresholds_Accuracy_Revised.csv")
df <- read.csv("MChInput_2015_withColumns_2.3.csv")
# Reformat data
df$Mode = relevel(as.factor(df$Mode), "Auto")
df$Income = as.factor(df$Income)
df$Status = as.factor(df$Status)
df$Gender = as.factor(df$Gender)
df$Licence = as.factor(df$Licence)
df$Car_Avail = as.factor(df$Car_Avail)
df$Work = as.factor(df$Work)
df$Family = as.factor(df$Family)
df$Level = as.factor(df$Level)
# Remove outliers
df_mode <- df[!(df$Time.Auto > 1e3),]
# Transform dataframe from wide to long
mldf = mlogit.data(df_mode, varying = 13:15, choice = "Mode", shape = "wide")
# Run reference model
model = mlogit(Mode ~ 0| 1 | Time, data = mldf, reflevel = "Transit")
out = data.frame("Threshold" = -1,
"R^2" = summary(model)[[20]][1],
"In-Sample Accuracy" = mean(fitted(model)),
"Full Sample Accuracy" = mean(fitted(model)))
# for (t in c(seq(15, 23, by=2), seq(25, 37, by=0.2), seq(40, 60, by=5), seq(75, 120, by=15), seq(180, 300, by=60)))
# for (t in c(seq(25, 35, by=1)))
# for (t in c(seq(15, 39, by=2), seq(40, 50, by=0.2), seq(51, 55, by=1), seq(60, 120, by=15), seq(180, 300, by=60)))
# {
#   print(t)
#   df_mode2 <- df[!(df$Time.Auto > 1e3),]
#   df_mode2 <- df_mode2[!((df_mode$Mode == "Active") & df_mode$Time.Active >= t),]
#   mldf2 = mlogit.data(df_mode2, varying = 13:15, choice = "Mode", shape = "wide")
#   mldf2$available = (mldf2$alt == "Auto") | (mldf2$alt == "Transit") | (mldf2$alt == "Active" & mldf2$Time < t)
#   model = mlogit(Mode ~ 0| 1 | Time, data = mldf2, reflevel = "Transit", subset = mldf2$available)
#
#   probs = as.data.frame(predict(model, newdata = mldf))
#   df_mode$prob.tr = probs$Transit
#   df_mode$prob.ac = probs$Active
#   df_mode$prob.au = probs$Auto
#
#   out[nrow(out)+1,] = c(t, summary(model)[[20]][1], mean(fitted(model)),
#                         mean(ifelse(df_mode$Mode == "Transit", df_mode$prob.tr,
#                              ifelse(df_mode$Mode == "Active", df_mode$prob.ac,
#                                     df_mode$prob.au))))
#   # print(cat("Threshold = ", t, "\tR^2: ", summary(model)[[20]][[1]]))
# }
# for (t in c(seq(15, 23, by=2), seq(25, 37, by=0.2), seq(40, 60, by=5), seq(75, 120, by=15), seq(180, 300, by=60)))
# for (t in c(seq(40, 60, by=5)))
for (t in c(seq(15, 33, by=2), seq(35, 50, by=0.2), seq(51, 55, by=1), seq(60, 120, by=15), seq(180, 300, by=60)))
{
# print(t)
df_mode2 <- df[!(df$Time.Auto > 1e3),]
df_mode2 <- df_mode2[!((df_mode$Mode == "Active") & df_mode$Time.Active >= t),]
mldf2 = mlogit.data(df_mode2, varying = 13:15, choice = "Mode", shape = "wide")
mldf2$available = (mldf2$alt == "Auto") | (mldf2$alt == "Transit") | (mldf2$alt == "Active" & mldf2$Time < t)
model = mlogit(Mode ~ 0| 1 | Time, data = mldf2, reflevel = "Transit", subset = mldf2$available)
out[nrow(out)+1,] = c(t, summary(model)[[20]][1], mean(fitted(model)),
nrow(df_mode2) * mean(fitted(model)) / nrow(df_mode))
# print(nrow(df_mode2))
print(cat("Threshold = ", t, "\tAccuracy: ", nrow(df_mode2) * mean(fitted(model)) / nrow(df_mode)))
}
write.csv(out, "Active_Thresholds_Accuracy_Revised.csv")
