df_mode <- df_mode[!(df_mode$Time.Transit > 200),]
df_mode <- df_mode[!(df_mode$Time.Auto > 150),]
p4 <- ggplot(df_mode, aes(x=Time.Auto, fill= Time.Auto)) +
geom_density(color="black", fill="deepskyblue", alpha=0.5) +
labs(title="Auto Time Density",x="Time (min)", y = "Density")
p5 <- ggplot(df_mode, aes(x=Time.Transit, fill= Time.Transit)) +
geom_density(color="black", fill="orangered1", alpha=0.5) +
labs(title="Transit Time Density",x="Time (min)", y = "Density")
p6 <- ggplot(df_mode, aes(x=Time.Active, fill= Time.Active)) +
geom_density(color="black", fill="grey34", alpha=0.5) +
labs(title="Active Time Density",x="Time (min)", y = "Density")
ggarrange(p4, p5, p6, widths = c(1,1,1))
dim(df_mode)
# Transform dataframe from wide to long
mldf = mlogit.data(df_mode, varying = 2:4, choice = "Mode", shape = "wide")
head(mldf)
# Run MNL model
model = mlogit(Mode ~ 0|1|Time, data = mldf, reflevel = "Auto")
summary(model)
x = summary(model)
# Write results to .csv file:
coefs_and_stats = array(numeric(), c(8,4))
x = summary(model)
for (i in 1:5)
{
coefs_and_stats[i,1] = x[[18]][[i]]
coefs_and_stats[i,2] = x[[18]][[i+15]]
coefs_and_stats[i,3] = x[[18]][[i+10]]
coefs_and_stats[i,4] = x[[18]][[i+5]]
}
coefs_and_stats[7,1] = x[[2]][[1]]
coefs_and_stats[8,1] = x[[20]][[1]]
summary(model)
# d = as.data.frame(coefs_and_stats)
# setnames(d, old = c('V1','V2', 'V3', 'V4'), new = c("Estimate","p-value","z-value","Std. Error"))
# write.csv(d, "ModeChoice_noCost_output.csv", row.names = c(
#   "ASC_Active", "ASC_Transit", "B_Auto", "B_Active", "B_Transit", "","LOG_LHOOD", "MCF_R^2"))
library(mlogit)
library(data.table)
library(ggplot2)
library(egg)
# Read ModeChoice_input.csv
df <- read.csv("C:/Users/gonza/Desktop/ModeChoice_Input.csv")
df$Mode = as.factor(df$Mode)
head(df)
dim(df)
p1 <- ggplot(df, aes(x=Time.Auto, fill= Time.Auto)) +
geom_density(color="black", fill="deepskyblue", alpha=0.5) +
labs(title="Auto Time Density",x="Time (min)", y = "Density")
p2 <- ggplot(df, aes(x=Time.Transit, fill= Time.Transit)) +
geom_density(color="black", fill="orangered1", alpha=0.5) +
labs(title="Transit Time Density",x="Time (min)", y = "Density")
p3 <- ggplot(df, aes(x=Time.Active, fill= Time.Active)) +
geom_density(color="black", fill="grey34", alpha=0.5) +
labs(title="Active Time Density",x="Time (min)", y = "Density")
ggarrange(p1, p2, p3, widths = c(1,1,1))
# Remove Outliers
df_mode <- df[!(df$Time.Active > 600),]
df_mode <- df_mode[!(df_mode$Time.Transit > 200),]
df_mode <- df_mode[!(df_mode$Time.Auto > 150),]
p4 <- ggplot(df_mode, aes(x=Time.Auto, fill= Time.Auto)) +
geom_density(color="black", fill="deepskyblue", alpha=0.5) +
labs(title="Auto Time Density",x="Time (min)", y = "Density")
p5 <- ggplot(df_mode, aes(x=Time.Transit, fill= Time.Transit)) +
geom_density(color="black", fill="orangered1", alpha=0.5) +
labs(title="Transit Time Density",x="Time (min)", y = "Density")
p6 <- ggplot(df_mode, aes(x=Time.Active, fill= Time.Active)) +
geom_density(color="black", fill="grey34", alpha=0.5) +
labs(title="Active Time Density",x="Time (min)", y = "Density")
ggarrange(p4, p5, p6, widths = c(1,1,1))
dim(df_mode)
# Transform dataframe from wide to long
mldf = mlogit.data(df_mode, varying = 2:4, choice = "Mode", shape = "wide")
head(mldf)
# Run MNL model
model = mlogit(Mode ~ 0|1|Time, data = mldf, reflevel = "Auto")
summary(model)
x = summary(model)
# Write results to .csv file:
coefs_and_stats = array(numeric(), c(8,4))
x = summary(model)
for (i in 1:5)
{
coefs_and_stats[i,1] = x[[18]][[i]]
coefs_and_stats[i,2] = x[[18]][[i+15]]
coefs_and_stats[i,3] = x[[18]][[i+10]]
coefs_and_stats[i,4] = x[[18]][[i+5]]
}
coefs_and_stats[7,1] = x[[2]][[1]]
coefs_and_stats[8,1] = x[[20]][[1]]
summary(model)
# d = as.data.frame(coefs_and_stats)
# setnames(d, old = c('V1','V2', 'V3', 'V4'), new = c("Estimate","p-value","z-value","Std. Error"))
# write.csv(d, "ModeChoice_noCost_output.csv", row.names = c(
#   "ASC_Active", "ASC_Transit", "B_Auto", "B_Active", "B_Transit", "","LOG_LHOOD", "MCF_R^2"))
library(mlogit)
library(data.table)
library(ggplot2)
library(egg)
# Read ModeChoice_input.csv
df <- read.csv("C:/Users/gonza/Desktop/ModeChoice_Input.csv")
df$Mode = as.factor(df$Mode)
head(df)
dim(df)
p1 <- ggplot(df, aes(x=Time.Auto, fill= Time.Auto)) +
geom_density(color="black", fill="deepskyblue", alpha=0.5) +
labs(title="Auto Time Density",x="Time (min)", y = "Density")
p2 <- ggplot(df, aes(x=Time.Transit, fill= Time.Transit)) +
geom_density(color="black", fill="orangered1", alpha=0.5) +
labs(title="Transit Time Density",x="Time (min)", y = "Density")
p3 <- ggplot(df, aes(x=Time.Active, fill= Time.Active)) +
geom_density(color="black", fill="grey34", alpha=0.5) +
labs(title="Active Time Density",x="Time (min)", y = "Density")
ggarrange(p1, p2, p3, widths = c(1,1,1))
# Remove Outliers
df_mode <- df[!(df$Time.Active > 600),]
df_mode <- df_mode[!(df_mode$Time.Transit > 200),]
df_mode <- df_mode[!(df_mode$Time.Auto > 150),]
p4 <- ggplot(df_mode, aes(x=Time.Auto, fill= Time.Auto)) +
geom_density(color="black", fill="deepskyblue", alpha=0.5) +
labs(title="Auto Time Density",x="Time (min)", y = "Density")
p5 <- ggplot(df_mode, aes(x=Time.Transit, fill= Time.Transit)) +
geom_density(color="black", fill="orangered1", alpha=0.5) +
labs(title="Transit Time Density",x="Time (min)", y = "Density")
p6 <- ggplot(df_mode, aes(x=Time.Active, fill= Time.Active)) +
geom_density(color="black", fill="grey34", alpha=0.5) +
labs(title="Active Time Density",x="Time (min)", y = "Density")
ggarrange(p4, p5, p6, widths = c(1,1,1))
dim(df_mode)
# Transform dataframe from wide to long
mldf = mlogit.data(df_mode, varying = 2:4, choice = "Mode", shape = "wide")
head(mldf)
# Run MNL model
model = mlogit(Mode ~ 0|1|Time, data = mldf, reflevel = "Auto")
summary(model)
x = summary(model)
# Write results to .csv file:
coefs_and_stats = array(numeric(), c(8,4))
x = summary(model)
for (i in 1:5)
{
coefs_and_stats[i,1] = x[[18]][[i]]
coefs_and_stats[i,2] = x[[18]][[i+15]]
coefs_and_stats[i,3] = x[[18]][[i+10]]
coefs_and_stats[i,4] = x[[18]][[i+5]]
}
coefs_and_stats[7,1] = x[[2]][[1]]
coefs_and_stats[8,1] = x[[20]][[1]]
summary(model)
# d = as.data.frame(coefs_and_stats)
# setnames(d, old = c('V1','V2', 'V3', 'V4'), new = c("Estimate","p-value","z-value","Std. Error"))
# write.csv(d, "ModeChoice_noCost_output.csv", row.names = c(
#   "ASC_Active", "ASC_Transit", "B_Auto", "B_Active", "B_Transit", "","LOG_LHOOD", "MCF_R^2"))
library(mlogit)
library(data.table)
library(ggplot2)
library(egg)
# Read ModeChoice_input.csv
df <- read.csv("C:/Users/gonza/Desktop/ModeChoice_Input.csv")
df$Mode = as.factor(df$Mode)
head(df)
dim(df)
p1 <- ggplot(df, aes(x=Time.Auto, fill= Time.Auto)) +
geom_density(color="black", fill="deepskyblue", alpha=0.5) +
labs(title="Auto Time Density",x="Time (min)", y = "Density")
p2 <- ggplot(df, aes(x=Time.Transit, fill= Time.Transit)) +
geom_density(color="black", fill="orangered1", alpha=0.5) +
labs(title="Transit Time Density",x="Time (min)", y = "Density")
p3 <- ggplot(df, aes(x=Time.Active, fill= Time.Active)) +
geom_density(color="black", fill="grey34", alpha=0.5) +
labs(title="Active Time Density",x="Time (min)", y = "Density")
ggarrange(p1, p2, p3, widths = c(1,1,1))
# Remove Outliers
df_mode <- df[!(df$Time.Active > 600),]
df_mode <- df_mode[!(df_mode$Time.Transit > 200),]
df_mode <- df_mode[!(df_mode$Time.Auto > 150),]
p4 <- ggplot(df_mode, aes(x=Time.Auto, fill= Time.Auto)) +
geom_density(color="black", fill="deepskyblue", alpha=0.5) +
labs(title="Auto Time Density",x="Time (min)", y = "Density")
p5 <- ggplot(df_mode, aes(x=Time.Transit, fill= Time.Transit)) +
geom_density(color="black", fill="orangered1", alpha=0.5) +
labs(title="Transit Time Density",x="Time (min)", y = "Density")
p6 <- ggplot(df_mode, aes(x=Time.Active, fill= Time.Active)) +
geom_density(color="black", fill="grey34", alpha=0.5) +
labs(title="Active Time Density",x="Time (min)", y = "Density")
ggarrange(p4, p5, p6, widths = c(1,1,1))
dim(df_mode)
# Transform dataframe from wide to long
mldf = mlogit.data(df_mode, varying = 2:4, choice = "Mode", shape = "wide")
head(mldf)
# Run MNL model
model = mlogit(Mode ~ 0|1|Time, data = mldf, reflevel = "Auto")
summary(model)
x = summary(model)
# Write results to .csv file:
coefs_and_stats = array(numeric(), c(8,4))
x = summary(model)
for (i in 1:5)
{
coefs_and_stats[i,1] = x[[18]][[i]]
coefs_and_stats[i,2] = x[[18]][[i+15]]
coefs_and_stats[i,3] = x[[18]][[i+10]]
coefs_and_stats[i,4] = x[[18]][[i+5]]
}
coefs_and_stats[7,1] = x[[2]][[1]]
coefs_and_stats[8,1] = x[[20]][[1]]
summary(model)
# d = as.data.frame(coefs_and_stats)
# setnames(d, old = c('V1','V2', 'V3', 'V4'), new = c("Estimate","p-value","z-value","Std. Error"))
# write.csv(d, "ModeChoice_noCost_output.csv", row.names = c(
#   "ASC_Active", "ASC_Transit", "B_Auto", "B_Active", "B_Transit", "","LOG_LHOOD", "MCF_R^2"))
# Remove Outliers
df_mode <- df[!(df$Time.Active > 600),]
df_mode <- df_mode[!(df_mode$Time.Transit > 200),]
df_mode <- df_mode[!(df_mode$Time.Auto > 150),]
p4 <- ggplot(df_mode, aes(x=Time.Auto, fill= Time.Auto)) +
geom_density(color="black", fill="deepskyblue", alpha=0.5) +
labs(title="Auto Time Density",x="Time (min)", y = "Density")
p5 <- ggplot(df_mode, aes(x=Time.Transit, fill= Time.Transit)) +
geom_density(color="black", fill="orangered1", alpha=0.5) +
labs(title="Transit Time Density",x="Time (min)", y = "Density")
p6 <- ggplot(df_mode, aes(x=Time.Active, fill= Time.Active)) +
geom_density(color="black", fill="grey34", alpha=0.5) +
labs(title="Active Time Density",x="Time (min)", y = "Density")
#ggarrange(p4, p5, p6, widths = c(1,1,1))
# Remove Outliers
df_mode <- df[!(df$Time.Active > 600),]
df_mode <- df_mode[!(df_mode$Time.Transit > 200),]
df_mode <- df_mode[!(df_mode$Time.Auto > 150),]
p4 <- ggplot(df_mode, aes(x=Time.Auto, fill= Time.Auto)) +
geom_density(color="black", fill="deepskyblue", alpha=0.5) +
labs(title="Auto Time Density",x="Time (min)", y = "Density")
p5 <- ggplot(df_mode, aes(x=Time.Transit, fill= Time.Transit)) +
geom_density(color="black", fill="orangered1", alpha=0.5) +
labs(title="Transit Time Density",x="Time (min)", y = "Density")
p6 <- ggplot(df_mode, aes(x=Time.Active, fill= Time.Active)) +
geom_density(color="black", fill="grey34", alpha=0.5) +
labs(title="Active Time Density",x="Time (min)", y = "Density")
#ggarrange(p4, p5, p6, widths = c(1,1,1))
# Remove Outliers
df_mode <- df[!(df$Time.Active > 600),]
df_mode <- df_mode[!(df_mode$Time.Transit > 200),]
df_mode <- df_mode[!(df_mode$Time.Auto > 150),]
p4 <- ggplot(df_mode, aes(x=Time.Auto, fill= Time.Auto)) +
geom_density(color="black", fill="deepskyblue", alpha=0.5) +
labs(title="Auto Time Density",x="Time (min)", y = "Density")
p5 <- ggplot(df_mode, aes(x=Time.Transit, fill= Time.Transit)) +
geom_density(color="black", fill="orangered1", alpha=0.5) +
labs(title="Transit Time Density",x="Time (min)", y = "Density")
p6 <- ggplot(df_mode, aes(x=Time.Active, fill= Time.Active)) +
geom_density(color="black", fill="grey34", alpha=0.5) +
labs(title="Active Time Density",x="Time (min)", y = "Density")
#ggarrange(p4, p5, p6, widths = c(1,1,1))
# Remove Outliers
df_mode <- df[!(df$Time.Active > 600),]
df_mode <- df_mode[!(df_mode$Time.Transit > 200),]
df_mode <- df_mode[!(df_mode$Time.Auto > 150),]
p4 <- ggplot(df_mode, aes(x=Time.Auto, fill= Time.Auto)) +
geom_density(color="black", fill="deepskyblue", alpha=0.5) +
labs(title="Auto Time Density",x="Time (min)", y = "Density")
p5 <- ggplot(df_mode, aes(x=Time.Transit, fill= Time.Transit)) +
geom_density(color="black", fill="orangered1", alpha=0.5) +
labs(title="Transit Time Density",x="Time (min)", y = "Density")
p6 <- ggplot(df_mode, aes(x=Time.Active, fill= Time.Active)) +
geom_density(color="black", fill="grey34", alpha=0.5) +
labs(title="Active Time Density",x="Time (min)", y = "Density")
ggarrange(p4, p5, p6, widths = c(1,1,1))
# d = as.data.frame(coefs_and_stats)
# setnames(d, old = c('V1','V2', 'V3', 'V4'), new = c("Estimate","p-value","z-value","Std. Error"))
# write.csv(d, "ModeChoice_noCost_output.csv", row.names = c(
#   "ASC_Active", "ASC_Transit", "B_Auto", "B_Active", "B_Transit", "","LOG_LHOOD", "MCF_R^2"))
# Transform dataframe from wide to long
mldf = mlogit.data(df_mode, varying = 2:4, choice = "Mode", shape = "wide")
# Run MNL model
model = mlogit(Mode ~ 0|1|Time, data = mldf, reflevel = "Auto")
summary(model)
x = summary(model)
# Write results to .csv file:
coefs_and_stats = array(numeric(), c(8,4))
x = summary(model)
for (i in 1:5)
{
coefs_and_stats[i,1] = x[[18]][[i]]
coefs_and_stats[i,2] = x[[18]][[i+15]]
coefs_and_stats[i,3] = x[[18]][[i+10]]
coefs_and_stats[i,4] = x[[18]][[i+5]]
}
coefs_and_stats[7,1] = x[[2]][[1]]
coefs_and_stats[8,1] = x[[20]][[1]]
summary(model)
# d = as.data.frame(coefs_and_stats)
# setnames(d, old = c('V1','V2', 'V3', 'V4'), new = c("Estimate","p-value","z-value","Std. Error"))
# write.csv(d, "ModeChoice_noCost_output.csv", row.names = c(
#   "ASC_Active", "ASC_Transit", "B_Auto", "B_Active", "B_Transit", "","LOG_LHOOD", "MCF_R^2"))
# Transform dataframe from wide to long
mldf = mlogit.data(df_mode, varying = 2:4, choice = "Mode", shape = "wide")
# Run MNL model
model = mlogit(Mode ~ 0|1|Time, data = mldf, reflevel = "Auto")
summary(model)
x = summary(model)
# Write results to .csv file:
coefs_and_stats = array(numeric(), c(8,4))
x = summary(model)
for (i in 1:5)
{
coefs_and_stats[i,1] = x[[18]][[i]]
coefs_and_stats[i,2] = x[[18]][[i+15]]
coefs_and_stats[i,3] = x[[18]][[i+10]]
coefs_and_stats[i,4] = x[[18]][[i+5]]
}
coefs_and_stats[7,1] = x[[2]][[1]]
coefs_and_stats[8,1] = x[[20]][[1]]
coeffs_and_stats
# Transform dataframe from wide to long
mldf = mlogit.data(df_mode, varying = 2:4, choice = "Mode", shape = "wide")
# Run MNL model
model = mlogit(Mode ~ 0|1|Time, data = mldf, reflevel = "Auto")
summary(model)
x = summary(model)
# Write results to .csv file:
coefs_and_stats = array(numeric(), c(8,4))
x = summary(model)
for (i in 1:5)
{
coefs_and_stats[i,1] = x[[18]][[i]]
coefs_and_stats[i,2] = x[[18]][[i+15]]
coefs_and_stats[i,3] = x[[18]][[i+10]]
coefs_and_stats[i,4] = x[[18]][[i+5]]
}
coefs_and_stats[7,1] = x[[2]][[1]]
coefs_and_stats[8,1] = x[[20]][[1]]
coefs_and_stats
# d = as.data.frame(coefs_and_stats)
# setnames(d, old = c('V1','V2', 'V3', 'V4'), new = c("Estimate","p-value","z-value","Std. Error"))
# write.csv(d, "ModeChoice_noCost_output.csv", row.names = c(
#   "ASC_Active", "ASC_Transit", "B_Auto", "B_Active", "B_Transit", "","LOG_LHOOD", "MCF_R^2"))
summary(model)
# Transform dataframe from wide to long
mldf = mlogit.data(df_mode, varying = 2:4, choice = "Mode", shape = "wide")
# Run MNL model
model = mlogit(Mode ~ 0|1|Time, data = mldf, reflevel = "Auto")
summary(model)
# Write results to .csv file:
coefs_and_stats = array(numeric(), c(8,4))
x = summary(model)
for (i in 1:5)
{
coefs_and_stats[i,1] = x[[18]][[i]]
coefs_and_stats[i,2] = x[[18]][[i+15]]
coefs_and_stats[i,3] = x[[18]][[i+10]]
coefs_and_stats[i,4] = x[[18]][[i+5]]
}
coefs_and_stats[7,1] = x[[2]][[1]]
coefs_and_stats[8,1] = x[[20]][[1]]
# d = as.data.frame(coefs_and_stats)
# setnames(d, old = c('V1','V2', 'V3', 'V4'), new = c("Estimate","p-value","z-value","Std. Error"))
# write.csv(d, "ModeChoice_noCost_output.csv", row.names = c(
#   "ASC_Active", "ASC_Transit", "B_Auto", "B_Active", "B_Transit", "","LOG_LHOOD", "MCF_R^2"))
df1$Mode = as.factor(df1$Mode)
# Read ModeChoice_input.csv
df1 <- read.csv("C:/Users/gonza/Desktop/ModeChoice_Input_withCost.csv")
df1$Mode = as.factor(df1$Mode)
head(df1)
# Remove Outliers
df_mode1 <- df1[!(df1$Time.Active > 600),]
df_mode1 <- df_mode1[!(df_mode1$Time.Transit > 200),]
df_mode1 <- df_mode1[!(df_mode1$Time.Auto > 150),]
# Transform dataframe from wide to long
mldf1 = mlogit.data(df1_mode, varying = 2:6, choice = "Mode", shape = "wide")
df_mode1 <- df1[!(df1$Time.Active > 600),]
df_mode1 <- df_mode1[!(df_mode1$Time.Transit > 200),]
df_mode1 <- df_mode1[!(df_mode1$Time.Auto > 150),]
# Transform dataframe from wide to long
mldf1 = mlogit.data(df_mode1, varying = 2:6, choice = "Mode", shape = "wide")
library(mlogit)
library(data.table)
library(ggplot2)
library(egg)
# Read ModeChoice_input.csv
df <- read.csv("C:/Users/gonza/Desktop/ModeChoice_Input.csv")
df$Mode = as.factor(df$Mode)
head(df)
dim(df)
p1 <- ggplot(df, aes(x=Time.Auto, fill= Time.Auto)) +
geom_density(color="black", fill="deepskyblue", alpha=0.5) +
labs(title="Auto Time Density",x="Time (min)", y = "Density")
p2 <- ggplot(df, aes(x=Time.Transit, fill= Time.Transit)) +
geom_density(color="black", fill="orangered1", alpha=0.5) +
labs(title="Transit Time Density",x="Time (min)", y = "Density")
p3 <- ggplot(df, aes(x=Time.Active, fill= Time.Active)) +
geom_density(color="black", fill="grey34", alpha=0.5) +
labs(title="Active Time Density",x="Time (min)", y = "Density")
ggarrange(p1, p2, p3, widths = c(1,1,1))
# Remove Outliers
df_mode <- df[!(df$Time.Active > 600),]
df_mode <- df_mode[!(df_mode$Time.Transit > 200),]
df_mode <- df_mode[!(df_mode$Time.Auto > 150),]
p4 <- ggplot(df_mode, aes(x=Time.Auto, fill= Time.Auto)) +
geom_density(color="black", fill="deepskyblue", alpha=0.5) +
labs(title="Auto Time Density",x="Time (min)", y = "Density")
p5 <- ggplot(df_mode, aes(x=Time.Transit, fill= Time.Transit)) +
geom_density(color="black", fill="orangered1", alpha=0.5) +
labs(title="Transit Time Density",x="Time (min)", y = "Density")
p6 <- ggplot(df_mode, aes(x=Time.Active, fill= Time.Active)) +
geom_density(color="black", fill="grey34", alpha=0.5) +
labs(title="Active Time Density",x="Time (min)", y = "Density")
ggarrange(p4, p5, p6, widths = c(1,1,1))
dim(df_mode)
# Transform dataframe from wide to long
mldf = mlogit.data(df_mode, varying = 2:4, choice = "Mode", shape = "wide")
# Run MNL model
model = mlogit(Mode ~ 0|1|Time, data = mldf, reflevel = "Auto")
summary(model)
# Write results to .csv file:
coefs_and_stats = array(numeric(), c(8,4))
x = summary(model)
for (i in 1:5)
{
coefs_and_stats[i,1] = x[[18]][[i]]
coefs_and_stats[i,2] = x[[18]][[i+15]]
coefs_and_stats[i,3] = x[[18]][[i+10]]
coefs_and_stats[i,4] = x[[18]][[i+5]]
}
coefs_and_stats[7,1] = x[[2]][[1]]
coefs_and_stats[8,1] = x[[20]][[1]]
# d = as.data.frame(coefs_and_stats)
# setnames(d, old = c('V1','V2', 'V3', 'V4'), new = c("Estimate","p-value","z-value","Std. Error"))
# write.csv(d, "ModeChoice_noCost_output.csv", row.names = c(
#   "ASC_Active", "ASC_Transit", "B_Auto", "B_Active", "B_Transit", "","LOG_LHOOD", "MCF_R^2"))
# Read ModeChoice_input.csv
df1 <- read.csv("C:/Users/gonza/Desktop/ModeChoice_Input_withCost.csv")
df1$Mode = as.factor(df1$Mode)
head(df1)
# Remove Outliers
df_mode1 <- df1[!(df1$Time.Active > 600),]
df_mode1 <- df_mode1[!(df_mode1$Time.Transit > 200),]
df_mode1 <- df_mode1[!(df_mode1$Time.Auto > 150),]
# # Transform dataframe from wide to long
# mldf1 = mlogit.data(df_mode1, varying = 2:4, choice = "Mode", shape = "wide")
# head(mldf1)
#
#
# # Run MNL model
# model1 = mlogit(Mode ~ 0|1|Time + Cost, data = mldf1, reflevel = "Auto")
# summary(model1)
#
# # Write results to .csv file:
# coefs_and_stats = array(numeric(), c(8,4))
# x = summary(model)
# for (i in 1:5)
# {
#   coefs_and_stats[i,1] = x[[18]][[i]]
#   coefs_and_stats[i,2] = x[[18]][[i+15]]
#   coefs_and_stats[i,3] = x[[18]][[i+10]]
#   coefs_and_stats[i,4] = x[[18]][[i+5]]
# }
#
# coefs_and_stats[7,1] = x[[2]][[1]]
# coefs_and_stats[8,1] = x[[20]][[1]]
# d = as.data.frame(coefs_and_stats)
# setnames(d, old = c('V1','V2', 'V3', 'V4'), new = c("Estimate","p-value","z-value","Std. Error"))
# write.csv(d, "ModeChoice_noCost_output.csv", row.names = c(
#   "ASC_Active", "ASC_Transit", "B_Auto", "B_Active", "B_Transit", "","LOG_LHOOD", "MCF_R^2"))
# Transform dataframe from wide to long
mldf1 = mlogit.data(df_mode1, varying = 2:6, choice = "Mode", shape = "wide")
df1$Mode = as.factor(df1$Mode)
# Read ModeChoice_input.csv
df1 <- read.csv("C:/Users/gonza/Desktop/ModeChoice_Input_withCost.csv")
df1$Mode = as.factor(df1$Mode)
head(df1)
df_mode1 <- df1[!(df1$Time.Active > 600),]
df_mode1 <- df_mode1[!(df_mode1$Time.Transit > 200),]
df_mode1 <- df_mode1[!(df_mode1$Time.Auto > 150),]
# Transform dataframe from wide to long
mldf1 = mlogit.data(df_mode1, varying = 2:7, choice = "Mode", shape = "wide")
head(mldf1)
# Run MNL model
model1 = mlogit(Mode ~ 0|1|Time + Cost, data = mldf1, reflevel = "Auto")
p7 <- ggplot(df_mode, aes(x=Cost.Auto, fill= Cost.Auto)) +
geom_density(color="black", fill="deepskyblue", alpha=0.5) +
labs(title="Auto Time Density",x="Time (min)", y = "Density")
p7
p7 <- ggplot(df_mode1, aes(x=Cost.Auto, fill= Cost.Auto)) +
geom_density(color="black", fill="deepskyblue", alpha=0.5) +
labs(title="Auto Time Density",x="Time (min)", y = "Density")
p7
# Read ModeChoice_input.csv
df1 <- read.csv("C:/Users/gonza/Desktop/ModeChoice_Input_withCost.csv")
df1$Mode = as.factor(df1$Mode)
head(df1)
# Run MNL model
model1 = mlogit(Mode ~ 0|Cost + 1|Time, data = mldf1, reflevel = "Auto")
```{r}
# Remove Outliers
df_mode1 <- df1[!(df1$Time.Active > 600),]
df_mode1 <- df_mode1[!(df_mode1$Time.Transit > 200),]
df_mode1 <- df_mode1[!(df_mode1$Time.Auto > 150),]
# Transform dataframe from wide to long
mldf1 = mlogit.data(df_mode1, varying = 2:7, choice = "Mode", shape = "wide")
# Remove Outliers
df_mode1 <- df1[!(df1$Time.Active > 600),]
df_mode1 <- df_mode1[!(df_mode1$Time.Transit > 200),]
df_mode1 <- df_mode1[!(df_mode1$Time.Auto > 150),]
# Transform dataframe from wide to long
mldf1 = mlogit.data(df_mode1, varying = 2:6, choice = "Mode", shape = "wide")
# Read ModeChoice_input.csv
df <- read.csv("C:/Users/gonza/Desktop/ModeChoice_2019Input_withoutCost.csv")
source('C:/Users/gonza/Desktop/University/Summer 2020/TMG/GitHub_PORPOS/PORPOS-TMG/R_Logit_Models/Mode Choice Models/ModeChoice_SimpleModel/ModeChoice2019NoCost.R', echo=TRUE)
source('C:/Users/gonza/Desktop/University/Summer 2020/TMG/GitHub_PORPOS/PORPOS-TMG/R_Logit_Models/Mode Choice Models/ModeChoice_SimpleModel/ModeChoice2019NoCost.R', echo=TRUE)
# Transform dataframe from wide to long
mldf1 = mlogit.data(df_mode1, varying = 2:6, choice = "Mode", shape = "wide")
View(p2)
